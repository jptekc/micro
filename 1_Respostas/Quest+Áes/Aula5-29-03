Data: 29/03/2017

Para as questões 2 a 5, considere que as variáveis 'f', 'g', 'h', 'i' e 'j' são do tipo inteiro (16 bits na arquitetura do MSP430), e que o vetor 'A[]' é do tipo inteiro. Estas variáveis estão armazenadas nos seguintes registradores:

	f: R4

	g: R5

	h: R6

	i: R7

	j: R8

	A: R9

Utilize os registradores R11, R12, R13, R14 e R15 para armazenar valores temporários.

1. Escreva os trechos de código assembly do MSP430 para:

	(a) Somente setar o bit menos significativo de R5.
      
     mov.w #1, R11
     bis.w R11, R5

	(b) Somente setar dois bits de R6: o menos significativo e o segundo menos significativo.

     mov.w #3, R11
     bis.w R11, R6

	(c) Somente zerar o terceiro bit menos significativo de R7.

     mov.w #251, R11
     and.w R11, R7


	(d) Somente zerar o terceiro e o quarto bits menos significativo de R8.
	
	

	(e) Somente inverter o bit mais significativo de R9.
	

	(f) Inverter o nibble mais significativo de R10, e setar o nibble menos significativo de R10. 


                 

2. "Traduza" o seguinte trecho de código em C para o assembly do MSP430:

	if(i>j) f = g+h+10;

	else f = g-h-10;

cmp R7, R8
jl  ELSE
add.w R5, R6
add.w #10, R6
mov.w R6, R4
jump EXIT

ELSE:
sub.w R5, R6
sub.w #10, R6  
mov.w R6, R4

EXIT:



3. "Traduza" o seguinte trecho de código em C para o assembly do MSP430:




	while(save[i]!=j) i++;

     LOOP: mov.w R7, R11
     rla R11;  2*i
     add.w R10, R12
     comp 0(R12), R8
     jeq Exit
     inc.w R7
     jump LOOP

     Exit:







4. "Traduza" o seguinte trecho de código em C para o assembly do MSP430:




	for(i=0; i<100; i++) A[i] = i*2;


         clr.w R7
  LOOP:  comp R7, #100

                        jge exit
                        mov.w r7, r11
                        rla r11
                        mov.w r11, r12
                        add r9,r12
                        mov.w r11, 0(r12)
                        inc.w r7
                        jump loop
                  Exit:


5. "Traduza" o seguinte trecho de código em C para o assembly do MSP430:




	for(i=99; i>=0; i--) A[i] = i*2;


mov.w #99, R7
LOOP:

comp #0, R7
jl EXIT
mov.w R7, R11
rla R11
mov.w R11, R12
add.w R9, R12
mov.w R11, 0(R12)
dec.w R7
jmp LOOP

EXIT:
