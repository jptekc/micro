Data: 26/04/2017

Para todas as questões, utilize os LEDs e/ou os botões da placa Launchpad do MSP430.

Resposta: #include <msp430g2553.h>
          void main(void){
	        WDTCTL = WDTPW | WDTHOLD;
          P1OUT = 0;
	        P1DIR = BIT0 + BIT6;
	        while(1);
	        }

1. Escreva um código em C que pisca os LEDs ininterruptamente.

Resposta: #include <msp430g2553.h>
          void main(void){
	        WDTCTL = WDTPW | WDTHOLD;
	        P1DIR = BIT0 + BIT6;
	        P1OUT = 0;
	        while(1);
	        }

2. Escreva um código em C que pisca os LEDs ininterruptamente. No ciclo que pisca os LEDs, o tempo que os LEDs ficam ligados deve ser duas vezes maior do que o tempo que eles ficam desligados.



3. Escreva um código em C que acende os LEDs quando o botão é pressionado.

Resposta: #include <msp430g2553.h>
          #define BTN bit2; //botao
	        #define LED1 bit0;
	        #define LED2 bit6;
	  
	        void main (void){
	        WDTCTL = WDTPW | WDTHOLD;
	        P1OUT = 0; //leds começam desligados
	        P1DIR = LED1 + LED2;
	        for (;;){
	           if ((P1IN & BTN) != 0){}
		          P1OUT |= LED1 + LED2; //enquanto nao pressionar o botao, nao ascende
		          P1OUT = 0;
		   
		          else //((P1IN & BTN) == 0){}
		          P1OUT &= ˜(LED1 + LED2);}
           }

4. Escreva um código em C que pisca os LEDs ininterruptamente somente se o botão for pressionado.

5. Escreva um código em C que acende os LEDs quando o botão é pressionado. Deixe o MSP430 em modo de baixo consumo, e habilite a interrupção do botão.

Resposta: #include <msp430g2553.h>
          #define BTN bit2; //botao
	        #define LED1 bit0;
	        #define LED2 bit6;
	  
	        void main (void){
	        WDTCTL = WDTPW | WDTHOLD;
	        P1OUT = 0; //leds começam desligados
	        P1DIR = LED1 + LED2;
          
          low_power_mode_4(); //O MSP entra em modo de pouca energia e daqui para frente ele não lê mais nada
                              //a não ser que tenha uma função 'interrupt'
                              
                              
          interrupt (PORT1_VECTOR)
          P1_ISR(void){
          
          P1OUT |= LED1;
          
          }
  
_BIS_SR(GIE + L8M4_bits)
while (1)

interrupt (PORT1_VECTOR)
P1_ISR(void){}
